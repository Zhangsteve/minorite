<?php
/**
 * Implements hook_block_info_alter().
 *
 * Enables blocks and defines their initial position.
 */
function mini_menu_block_info_alter(&$blocks, $theme, $code_blocks) {
  if ($theme == 'minorite' || $theme == 'mini_html4') {
    // Enables primary navigation.
    $blocks['mini_menu']['primary']['status'] = 1;
    $blocks['mini_menu']['primary']['region'] = 'navigation';
    $blocks['mini_menu']['primary']['weight'] = -57;
    // Enables secondary navigation.
    $blocks['mini_menu']['secondary']['status'] = 1;
    $blocks['mini_menu']['secondary']['region'] = 'left';
    // Enables footer navigation.
    $blocks['mini_menu']['navigation']['status'] = 1;
    $blocks['mini_menu']['navigation']['region'] = 'footer';
    // Enables other-sites navigation.
    if (isset($blocks['menu']['links'])) {
      // The menu is created after feature has first installed and enabled this
      // module so the links block does not yet exists. We need to check first
      // to avoid buggy site install or empty INSERT in the {block} table.
      $blocks['menu']['links']['status'] = 1;
      $blocks['menu']['links']['region'] = 'footer';
    }
    // Enables footer navigation.
    if (isset($blocks['menu']['footer'])) {
      // The menu is created after feature has first installed and enabled this
      // module so the links block does not yet exists. We need to check first
      // to avoid buggy site install or empty INSERT in the {block} table.
      $blocks['menu']['footer']['status'] = 1;
      $blocks['menu']['footer']['weight'] = -10;
      $blocks['menu']['footer']['region'] = 'bottom';
    }
  }
}

/**
 * Implements hook_block_info().
 *
 * TODO: Create a new cache by management level.
 */
function mini_menu_block_info() {
  $blocks = array();

  $blocks['primary']['info'] = t('Primary menu');
  $blocks['secondary']['info'] = t('Secondary menu');
  $blocks['navigation']['info'] = t('Navigation menu');

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function mini_menu_block_view($delta = '') {
  $block = array();

  switch ($delta) {
  	case 'primary':
  	  $block['content'] = mini_menu_block_primary();
  	  break;
    case 'secondary':
      // Secondary block navigation is composed of level-2 and more navigation
      // links from the current section. It is based on menu system.
      $block['content'] = mini_menu_block_secondary();
      break;

    case 'navigation':
      // Navigation block is composed of level-1 menus with level-2 links to
      // these sections and is displayed at the bottom.
      $block['content'] = mini_menu_block_navigation();
      break;
  }
  return $block;
}
/**
 * Returns the primary menu block.
 */
function mini_menu_block_primary(){
  $elements = array();
  $elements['menu']['#theme_wrappers'] = array('menu_tree__primary');
  $menu = menu_main_menu();
  // Sets the menu title to redirect the first child found in the sub-menu.
  foreach ($menu as $menu => $item){
    $elements['menu'][$menu]['#title'] = l(t($item['title']), $item['href']);
    $elements['menu'][$menu]['#attributes'] = array('class' => 'nav meganav');
    // Renders links before injecting them as children in the theme header.
    $elements['menu'][$menu]['#theme_wrappers'] = array('links__navigation', 'menu_header');
  }
  return $elements;
}
/**
 * Return secondary menu items
 */
function mini_menu_block_secondary() {


}
/**
 * Returns the footer navigation menu block.
 */
function mini_menu_block_navigation() {
  $elements = array();
  $names = menu_get_menus(FALSE);
  // TODO: export menus in features and use the function here.
  return $elements;
}
/**
 * Implements hook_theme().
 */
function mini_menu_theme($existing, $type, $theme, $path) {
  return array(
      'menu_header' => array(
          'variables' => array('title' => NULL, 'nodes' => NULL, 'children' => NULL),
          'template' => 'menu-header',
          'path' => $path . '/templates',
      ),
      'menu_footer' => array(
          'variables' => array('title' => NULL, 'children' => NULL),
      ),
  );
}

/**
 * Returns HTML for a wrapper for a footer menu.
 *
 * @param $variables
 *   An associative array containing:
 *   - title: The title of the menu.
 *   - children: An HTML string containing the tree's items.
 */
function theme_menu_footer($variables) {
  $title = "\n";
  $title .= '<h2>' . $variables['title'] . "</h2>\n";

  static $grid = 1;
  return '<div class="w-' . $grid++ . '">' . $title . $variables['children'] . "</div>\n";
}

/**
 * Implements hook_menu_alter().
 *
 * Displays the login link in the user menu as a normal item.
 */
function disney_menu_menu_alter(&$items) {
  // Displays this menu link in the drop-down.
  // TODO: use the position if allowed ?
  $items['user']['options'] = array('position' => 'right');
  $items['user/logout']['options'] = array('position' => 'right');
}